# Generated by Django 4.2.4 on 2023-09-06 00:45

from django.db import migrations, models
import django.utils.timezone


class Migration(migrations.Migration):

    initial = True

    dependencies = [
    ]

    operations = [
        migrations.CreateModel(
            name='HittingReport',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('player_name', models.CharField(max_length=255)),
                ('team', models.CharField(choices=[('Baltimore Orioles', 'Baltimore Orioles'), ('Boston Red Sox', 'Boston Red Sox'), ('New York Yankees', 'New York Yankees'), ('Tampa Bay Rays', 'Tampa Bay Rays'), ('Toronto Blue Jays', 'Toronto Blue Jays'), ('Chicago White Sox', 'Chicago White Sox'), ('Cleveland Guardians', 'Cleveland Guardians'), ('Detroit Tigers', 'Detroit Tigers'), ('Kansas City Royals', 'Kansas City Royals'), ('Minnesota Twins', 'Minnesota Twins'), ('Houston Astros', 'Houston Astros'), ('Los Angeles Angels', 'Los Angeles Angels'), ('Oakland Athletics', 'Oakland Athletics'), ('Seattle Mariners', 'Seattle Mariners'), ('Texas Rangers', 'Texas Rangers'), ('Atlanta Braves', 'Atlanta Braves'), ('Miami Marlins', 'Miami Marlins'), ('New York Mets', 'New York Mets'), ('Philadelphia Phillies', 'Philadelphia Phillies'), ('Washington Nationals', 'Washington Nationals'), ('Chicago Cubs', 'Chicago Cubs'), ('Cincinnati Reds', 'Cincinnati Reds'), ('Milwaukee Brewers', 'Milwaukee Brewers'), ('Pittsburgh Pirates', 'Pittsburgh Pirates'), ('St. Louis Cardinals', 'St. Louis Cardinals'), ('Arizona Diamondbacks', 'Arizona Diamondbacks'), ('Colorado Rockies', 'Colorado Rockies'), ('Los Angeles Dodgers', 'Los Angeles Dodgers'), ('San Diego Padres', 'San Diego Padres'), ('San Francisco Giants', 'San Francisco Giants')], max_length=30)),
                ('bats', models.CharField(choices=[('l', 'L'), ('r', 'R'), ('S', 'S')], max_length=10)),
                ('throws', models.CharField(choices=[('l', 'L'), ('r', 'R')], max_length=10)),
                ('pos', models.CharField(choices=[('S', 'S'), ('LHP', 'LHP'), ('RHP', 'RHP'), ('SS', 'SS'), ('C', 'C'), ('OF', 'OF'), ('3B', '3B'), ('1B', '1B'), ('2B', '2B')], max_length=10)),
                ('report_date', models.DateTimeField(default=django.utils.timezone.now)),
                ('Declarative_Statement', models.TextField()),
                ('fvforhit', models.PositiveIntegerField(blank=True, choices=[(20, 20), (25, 25), (30, 30), (35, 35), (40, 40), (45, 45), (50, 50), (55, 55), (60, 60), (65, 65), (70, 70), (75, 75), (80, 80)], null=True)),
                ('fvforfielding', models.PositiveIntegerField(blank=True, choices=[(20, 20), (25, 25), (30, 30), (35, 35), (40, 40), (45, 45), (50, 50), (55, 55), (60, 60), (65, 65), (70, 70), (75, 75), (80, 80)], null=True)),
                ('fvforpower', models.PositiveIntegerField(blank=True, choices=[(20, 20), (25, 25), (30, 30), (35, 35), (40, 40), (45, 45), (50, 50), (55, 55), (60, 60), (65, 65), (70, 70), (75, 75), (80, 80)], null=True)),
                ('fvforthrowing', models.PositiveIntegerField(blank=True, choices=[(20, 20), (25, 25), (30, 30), (35, 35), (40, 40), (45, 45), (50, 50), (55, 55), (60, 60), (65, 65), (70, 70), (75, 75), (80, 80)], null=True)),
                ('fvforrun', models.PositiveIntegerField(blank=True, choices=[(20, 20), (25, 25), (30, 30), (35, 35), (40, 40), (45, 45), (50, 50), (55, 55), (60, 60), (65, 65), (70, 70), (75, 75), (80, 80)], null=True)),
                ('commentforhit', models.CharField(blank=True, max_length=255, null=True)),
                ('commentforfielding', models.CharField(blank=True, max_length=255, null=True)),
                ('commentforpower', models.CharField(blank=True, max_length=255, null=True)),
                ('commentforthrowing', models.CharField(blank=True, max_length=255, null=True)),
                ('commentforrun', models.CharField(blank=True, max_length=255, null=True)),
                ('hit', models.PositiveIntegerField(choices=[(20, 20), (25, 25), (30, 30), (35, 35), (40, 40), (45, 45), (50, 50), (55, 55), (60, 60), (65, 65), (70, 70), (75, 75), (80, 80)])),
                ('fielding', models.PositiveIntegerField(choices=[(20, 20), (25, 25), (30, 30), (35, 35), (40, 40), (45, 45), (50, 50), (55, 55), (60, 60), (65, 65), (70, 70), (75, 75), (80, 80)])),
                ('power', models.PositiveIntegerField(choices=[(20, 20), (25, 25), (30, 30), (35, 35), (40, 40), (45, 45), (50, 50), (55, 55), (60, 60), (65, 65), (70, 70), (75, 75), (80, 80)])),
                ('throwing', models.PositiveIntegerField(choices=[(20, 20), (25, 25), (30, 30), (35, 35), (40, 40), (45, 45), (50, 50), (55, 55), (60, 60), (65, 65), (70, 70), (75, 75), (80, 80)])),
                ('run', models.PositiveIntegerField(choices=[(20, 20), (25, 25), (30, 30), (35, 35), (40, 40), (45, 45), (50, 50), (55, 55), (60, 60), (65, 65), (70, 70), (75, 75), (80, 80)])),
                ('overall_grade', models.PositiveIntegerField(blank=True, choices=[(20, 20), (25, 25), (30, 30), (35, 35), (40, 40), (45, 45), (50, 50), (55, 55), (60, 60), (65, 65), (70, 70), (75, 75), (80, 80)], null=True)),
                ('future_grade', models.PositiveIntegerField(blank=True, choices=[(20, 20), (25, 25), (30, 30), (35, 35), (40, 40), (45, 45), (50, 50), (55, 55), (60, 60), (65, 65), (70, 70), (75, 75), (80, 80)], null=True)),
            ],
        ),
        migrations.CreateModel(
            name='PitchingReport',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('player_name', models.CharField(blank=True, max_length=255, null=True)),
                ('team', models.CharField(choices=[('Baltimore Orioles', 'Baltimore Orioles'), ('Boston Red Sox', 'Boston Red Sox'), ('New York Yankees', 'New York Yankees'), ('Tampa Bay Rays', 'Tampa Bay Rays'), ('Toronto Blue Jays', 'Toronto Blue Jays'), ('Chicago White Sox', 'Chicago White Sox'), ('Cleveland Guardians', 'Cleveland Guardians'), ('Detroit Tigers', 'Detroit Tigers'), ('Kansas City Royals', 'Kansas City Royals'), ('Minnesota Twins', 'Minnesota Twins'), ('Houston Astros', 'Houston Astros'), ('Los Angeles Angels', 'Los Angeles Angels'), ('Oakland Athletics', 'Oakland Athletics'), ('Seattle Mariners', 'Seattle Mariners'), ('Texas Rangers', 'Texas Rangers'), ('Atlanta Braves', 'Atlanta Braves'), ('Miami Marlins', 'Miami Marlins'), ('New York Mets', 'New York Mets'), ('Philadelphia Phillies', 'Philadelphia Phillies'), ('Washington Nationals', 'Washington Nationals'), ('Chicago Cubs', 'Chicago Cubs'), ('Cincinnati Reds', 'Cincinnati Reds'), ('Milwaukee Brewers', 'Milwaukee Brewers'), ('Pittsburgh Pirates', 'Pittsburgh Pirates'), ('St. Louis Cardinals', 'St. Louis Cardinals'), ('Arizona Diamondbacks', 'Arizona Diamondbacks'), ('Colorado Rockies', 'Colorado Rockies'), ('Los Angeles Dodgers', 'Los Angeles Dodgers'), ('San Diego Padres', 'San Diego Padres'), ('San Francisco Giants', 'San Francisco Giants')], max_length=30)),
                ('throws', models.CharField(choices=[('l', 'L'), ('r', 'R')], max_length=10)),
                ('pos', models.CharField(choices=[('S', 'S'), ('LHP', 'LHP'), ('RHP', 'RHP'), ('SS', 'SS'), ('C', 'C'), ('OF', 'OF'), ('3B', '3B'), ('1B', '1B'), ('2B', '2B')], max_length=10)),
                ('report_date', models.DateTimeField()),
                ('Declarative_Statement', models.TextField(blank=True, null=True)),
                ('overall_grade', models.PositiveIntegerField(blank=True, choices=[(20, 20), (25, 25), (30, 30), (35, 35), (40, 40), (45, 45), (50, 50), (55, 55), (60, 60), (65, 65), (70, 70), (75, 75), (80, 80)], null=True)),
                ('future_grade', models.PositiveIntegerField(blank=True, choices=[(20, 20), (25, 25), (30, 30), (35, 35), (40, 40), (45, 45), (50, 50), (55, 55), (60, 60), (65, 65), (70, 70), (75, 75), (80, 80)], null=True)),
                ('pitch1', models.CharField(blank=True, choices=[('FASTBALL', 'fastball'), ('CHANEUP', 'changeup'), ('SLIDER', 'slider'), ('CURVEBALL', 'curveball'), ('SLURVE', 'slurve'), ('CUT FASTBALL', 'cut fastball'), ('SPLIT FINGER', 'split finger'), ('KNUCKLE BALL', 'knuckle ball'), ('SINKER', 'sinker'), ('RUNS', 'runs')], max_length=20, null=True)),
                ('pitch2', models.CharField(blank=True, choices=[('FASTBALL', 'fastball'), ('CHANEUP', 'changeup'), ('SLIDER', 'slider'), ('CURVEBALL', 'curveball'), ('SLURVE', 'slurve'), ('CUT FASTBALL', 'cut fastball'), ('SPLIT FINGER', 'split finger'), ('KNUCKLE BALL', 'knuckle ball'), ('SINKER', 'sinker'), ('RUNS', 'runs')], max_length=20, null=True)),
                ('pitch3', models.CharField(blank=True, choices=[('FASTBALL', 'fastball'), ('CHANEUP', 'changeup'), ('SLIDER', 'slider'), ('CURVEBALL', 'curveball'), ('SLURVE', 'slurve'), ('CUT FASTBALL', 'cut fastball'), ('SPLIT FINGER', 'split finger'), ('KNUCKLE BALL', 'knuckle ball'), ('SINKER', 'sinker'), ('RUNS', 'runs')], max_length=20, null=True)),
                ('pitch4', models.CharField(blank=True, choices=[('FASTBALL', 'fastball'), ('CHANEUP', 'changeup'), ('SLIDER', 'slider'), ('CURVEBALL', 'curveball'), ('SLURVE', 'slurve'), ('CUT FASTBALL', 'cut fastball'), ('SPLIT FINGER', 'split finger'), ('KNUCKLE BALL', 'knuckle ball'), ('SINKER', 'sinker'), ('RUNS', 'runs')], max_length=20, null=True)),
                ('pitch1_velo_low', models.CharField(blank=True, max_length=255, null=True)),
                ('pitch2_velo_low', models.CharField(blank=True, max_length=255, null=True)),
                ('pitch3_velo_low', models.CharField(blank=True, max_length=255, null=True)),
                ('pitch4_velo_low', models.CharField(blank=True, max_length=255, null=True)),
                ('pitch1_velo_high', models.CharField(blank=True, max_length=255, null=True)),
                ('pitch2_velo_high', models.CharField(blank=True, max_length=255, null=True)),
                ('pitch3_velo_high', models.CharField(blank=True, max_length=255, null=True)),
                ('pitch4_velo_high', models.CharField(blank=True, max_length=255, null=True)),
                ('pitch1_grade', models.PositiveIntegerField(blank=True, choices=[(20, 20), (25, 25), (30, 30), (35, 35), (40, 40), (45, 45), (50, 50), (55, 55), (60, 60), (65, 65), (70, 70), (75, 75), (80, 80)], null=True)),
                ('pitch2_grade', models.PositiveIntegerField(blank=True, choices=[(20, 20), (25, 25), (30, 30), (35, 35), (40, 40), (45, 45), (50, 50), (55, 55), (60, 60), (65, 65), (70, 70), (75, 75), (80, 80)], null=True)),
                ('pitch3_grade', models.PositiveIntegerField(blank=True, choices=[(20, 20), (25, 25), (30, 30), (35, 35), (40, 40), (45, 45), (50, 50), (55, 55), (60, 60), (65, 65), (70, 70), (75, 75), (80, 80)], null=True)),
                ('pitch4_grade', models.PositiveIntegerField(blank=True, choices=[(20, 20), (25, 25), (30, 30), (35, 35), (40, 40), (45, 45), (50, 50), (55, 55), (60, 60), (65, 65), (70, 70), (75, 75), (80, 80)], null=True)),
                ('pitch1_comment', models.CharField(blank=True, max_length=255, null=True)),
                ('pitch2_comment', models.CharField(blank=True, max_length=255, null=True)),
                ('pitch3_comment', models.CharField(blank=True, max_length=255, null=True)),
                ('pitch4_comment', models.CharField(blank=True, max_length=255, null=True)),
                ('pitch1_fv', models.PositiveIntegerField(blank=True, choices=[(20, 20), (25, 25), (30, 30), (35, 35), (40, 40), (45, 45), (50, 50), (55, 55), (60, 60), (65, 65), (70, 70), (75, 75), (80, 80)], null=True)),
                ('pitch2_fv', models.PositiveIntegerField(blank=True, choices=[(20, 20), (25, 25), (30, 30), (35, 35), (40, 40), (45, 45), (50, 50), (55, 55), (60, 60), (65, 65), (70, 70), (75, 75), (80, 80)], null=True)),
                ('pitch3_fv', models.PositiveIntegerField(blank=True, choices=[(20, 20), (25, 25), (30, 30), (35, 35), (40, 40), (45, 45), (50, 50), (55, 55), (60, 60), (65, 65), (70, 70), (75, 75), (80, 80)], null=True)),
                ('pitch4_fv', models.PositiveIntegerField(blank=True, choices=[(20, 20), (25, 25), (30, 30), (35, 35), (40, 40), (45, 45), (50, 50), (55, 55), (60, 60), (65, 65), (70, 70), (75, 75), (80, 80)], null=True)),
            ],
        ),
    ]
